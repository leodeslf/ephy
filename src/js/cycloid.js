import { Vec2 } from '@leodeslf/vec.js';
import { setDebugParams } from './debug';
import { radian } from '/src/js/util';
import { rendering, progress } from '/src/stores/feedback';

let animation;
let context, width, height;
let ratio, render;
let step, current, end, r2Vector, orbitVector;

function setContext(newContext) {
  context = newContext;
  width = context.canvas.width;
  height = context.canvas.height;
  resetDraw();
}

function setRatio(newRatio) {
  ratio = { ...newRatio };
  resetDraw();
}

function setRender(newRender) {
  render = { ...newRender };
  resetDraw();
}

function resetDraw() {
  if (!context || !ratio || !render) return;
  cancelAnimationFrame(animation);
  context.clearRect(-width * .5, -height * .5, width, height);
  progress.set(0);
  rendering.set(true);

  step = render.speedR1R2;
  current = 0;
  end = radian * ratio.revolutions;
  r2Vector = new Vec2(-ratio.r2Factor, 0);
  orbitVector = new Vec2(ratio.orbit, 0);

  setDebugParams(ratio, render);
  drawCycloid();
}

function drawCycloid() {
  for (let i = 0; i < render.iterations; i++) {
    /* const sum = Vec2.add(r2Vector, orbitVector).angleX;
    context.strokeStyle = `hsl(${sum / radian * 360}, 100%, 50%)`; */

    // Draw from current position...
    context.beginPath();
    context.moveTo(...Vec2.add(orbitVector, r2Vector).xy);

    // To next.
    r2Vector.rotateAxisZ(-render.speedR2);
    orbitVector.rotateAxisZ(-render.speedR1R2);

    current += step;
    progress.set(+(current / end * 100).toFixed(0));
    if (current >= end) {
      context.closePath();
      rendering.set(false);
      return cancelAnimationFrame(animation);
    }

    context.lineTo(...Vec2.add(orbitVector, r2Vector).xy);
    context.closePath();
    context.stroke();
  }

  animation = requestAnimationFrame(drawCycloid);
}

export { setContext, setRatio, setRender, resetDraw };

/**
 * In geometry, a curve generated by the motion of a point on the circumference
 * of a circle which rolls upon the convex side of a fixed circle. These curves
 * were invented by the Danish astronomer Roemer in 1674.
 */

/**
 * More at:
 *
 * https://en.wikipedia.org/wiki/Epicycloid
 * https://en.wikipedia.org/wiki/Epitrochoid
 * https://en.wikipedia.org/wiki/Hypocycloid
 * https://en.wikipedia.org/wiki/Hypotrochoid
 *
 * https://mathshistory.st-andrews.ac.uk/Curves/Epicycloid/
 * https://teachingcalculus.com/2014/06/27/epicycloids-2/
 * http://contenidos.educarex.es/cnice/descartes/Esp/Geometria/Curvas_en_parametricas/clasica2.htm
 * http://xahlee.info/SpecialPlaneCurves_dir/EpiHypocycloid_dir/epiHypocycloid.html
 * https://cran.r-project.org/web/packages/cycloids/cycloids.pdf
 */
